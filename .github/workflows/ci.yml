name: CI

env:
  CARGO_TERM_COLOR: always

on:
  push:
    branches:
    - main
  pull_request: {}

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - stable
          - beta
          - "1.60"
        dir:
          - .
          - examples/elements_box
          - examples/elements_block
          - examples/elements_button
          - examples/elements_delete
          - examples/elements_icon
          - examples/elements_image
          - examples/elements_notification
          - examples/elements_progress
          - examples/elements_table
          - examples/elements_tag
          - examples/elements_title
    steps:
      - uses: actions/checkout@main

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.channel }}
          targets: wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Restore cached toolchain
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        working-directory: ${{ matrix.dir }}
        run: |
          cargo clippy --all --all-targets --all-features

      - name: rustfmt
        working-directory: ${{ matrix.dir }}
        run: |
          cargo fmt --all --check

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Restore cached toolchain
        uses: Swatinem/rust-cache@v2

      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken-intra-doc-links"
        run: cargo doc --all --all-features --no-deps --document-private-items

      - name: Test documentation examples
        run: cargo test --doc --all --all-features

  test:
    strategy:
      matrix:
        channel:
          - stable
          - beta
          - "1.60"
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@main

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.channel }}
          targets: wasm32-unknown-unknown

      - name: Restore cached toolchain
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Test
        run: cargo nextest run --all --all-targets --all-features

  coverage:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@main

      - name: Install Rust stable toolchain (with coverage instrumentation)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          components: llvm-tools-preview

      - name: Restore cached toolchain
        id: rust-cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Install grcov
        if: steps.rust-cache.output.cache-hit != 'true'
        run: |
          cargo install grcov

      - name: Generate coverage
        run: cargo xtask

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/cov.lcov
          fail_ci_if_error: true
